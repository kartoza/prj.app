name: release-build
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Git tag to use'
  release:
    types:
      - released
  push:
    tags:
      - '*.*.*.'
      - 'v*.*.*.'
jobs:
  docker-builder-run-on-tag:
    if: ${{ github.event.inputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/docker/Dockerfile
          push: true
          target: prod
          tags: ${{ secrets.DOCKERHUB_REPO }}/projecta-uwsgi:${{ github.event.inputs.tags }}
          cache-from: type=gha,scope=prod
          cache-to: type=gha,scope=prod
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  docker-builder-run-on-tag-release:
    if: ${{ !github.event.inputs.tags }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}/projecta-uwsgi
          tags: |
            type=semver,pattern=\d.\d.\d
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/docker/Dockerfile
          push: true
          target: prod
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha,scope=prod
          cache-to: type=gha,scope=prod

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
